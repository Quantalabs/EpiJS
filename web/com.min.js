class Virus{constructor(a,t,s=0,d=0){this.rnaught=a,this.u=t,this.a=s,this.d=d}}class Community{constructor(a,t,s){this.pop=a,this.i=t,this.s=s,this.r=a-(t+s)}sir(a,t){let s={datasets:[{data:[this.s],label:"Suseptible"},{data:[this.i],label:"Infected"},{data:[this.r],label:"Recovered"}]};for(let d=0;d<t;d++)s.datasets[0].data.push(s.datasets[0].data[d]-a.rnaught*a.u*s.datasets[0].data[d]*s.datasets[1].data[d]/this.pop),s.datasets[1].data.push(s.datasets[1].data[d]+a.rnaught*a.u*s.datasets[0].data[d]*s.datasets[1].data[d]/this.pop-a.u*s.datasets[1].data[d]),s.datasets[2].data.push(s.datasets[2].data[d]+a.u*s.datasets[1].data[d]);return s}seir(a,t){let s={datasets:[{data:[this.s],label:"Suseptible"},{data:[this.i],label:"Exposed"},{data:[0],label:"Infected"},{data:[this.r],label:"Recovered"}]};for(let d=0;d<t;d++)s.datasets[0].data.push(s.datasets[0].data[d]-a.rnaught*a.u*s.datasets[0].data[d]*s.datasets[1].data[d]/this.pop),s.datasets[1].data.push(s.datasets[1].data[d]+a.rnaught*a.u*s.datasets[0].data[d]*s.datasets[1].data[d]/this.pop-a.a*s.datasets[1].data[d]),s.datasets[2].data.push(s.datasets[2].data[d]+a.a*s.datasets[1].data[d]-a.u*s.datasets[2].data[d]),s.datasets[3].data.push(s.datasets[3].data[d]+a.u*s.datasets[2].data[d]);return s}seird(a,t){let s={datasets:[{data:[this.s],label:"Suseptible"},{data:[this.i],label:"Exposed"},{data:[0],label:"Infected"},{data:[this.r],label:"Recovered"},{data:[0],label:"Dead"}]};for(let d=0;d<t;d++)s.datasets[0].data.push(s.datasets[0].data[d]-a.rnaught*a.u*s.datasets[0].data[d]*s.datasets[1].data[d]/this.pop),s.datasets[1].data.push(s.datasets[1].data[d]+a.rnaught*a.u*s.datasets[0].data[d]*s.datasets[1].data[d]/this.pop-a.a*s.datasets[1].data[d]),s.datasets[2].data.push(s.datasets[2].data[d]+a.a*s.datasets[1].data[d]-a.u*s.datasets[2].data[d]-a.d*s.datasets[2].data[d]),s.datasets[3].data.push(s.datasets[3].data[d]+a.u*s.datasets[2].data[d]),s.datasets[4].data.push(s.datasets[4].data[d]+a.d*s.datasets[2].data[d]);return s}custom(a,t,s,d={}){let e=Object.assign({S:this.s,I:this.i,R:this.r,rn:s.rnaught,u:s.u,a:s.a,d:s.d,p:this.pop},d),r=Object.assign({S:this.s,I:this.i,R:this.r,rn:s.rnaught,u:s.u,a:s.a,d:s.d,p:this.pop},d),h={datasets:[]};for(let t=0;t<a.length;t++)h.datasets.push({data:[],label:a[t][1]});for(let s=0;s<t;s++){for(let t=0;t<a.length;t++)h.datasets[t].data.push(a[t][0].get_data(e)),r[a[t][1]]=a[t][0].get_data(e);e=r}return h}}function compare(a,t,s,d,e,r){let h={labels:[],datasets:[]},l=t.datasets.length,i=s.datasets.length;for(var u=0;u<r;u++)h.labels.push("Day "+(u+1).toString());for(var o=0;o<l;o++)h.datasets[o]={},h.datasets[o].data=t.datasets[o].data,h.datasets[o].label=t.datasets[o].label+" ("+d+")",h.datasets[o].borderColor="#"+Math.floor(16777215*Math.random()).toString(16);for(var p=l;p<i+l;p++)h.datasets[p]={},h.datasets[p].data=s.datasets[p-l].data,h.datasets[p].label=s.datasets[p-l].label+" ("+e+")",h.datasets[p].borderColor="#"+Math.floor(16777215*Math.random()).toString(16);new Chart(a,{type:"line",data:h,options:{title:{display:!0,text:"Total Cases"}}})}